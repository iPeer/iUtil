package com.ipeer.iutil.cache;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;

import com.ipeer.iutil.engine.Channel;
import com.ipeer.iutil.engine.Engine;

public class Cache {

	Map<String, Uploader> Uploads;
	protected Engine engine;

	public Cache(Engine engine) {
		this.engine = engine;
		this.Uploads = new HashMap<String, Uploader>();
	}

	public void addVideo(String user, String title, String url) {
		if (Uploads.containsKey(user)) {
			Uploader u = Uploads.get(user);
			if (!u.isCached(title))
				u.addVideo(title, url);
			else
				return;
		}
		else
		{
			Uploader u = new Uploader(user);
			u.addVideo(title, url);
			Uploads.put(user, u);
		}
	}

	public void generateFile() throws IOException {
		generateFile("/home/iPeer/www/html/vcaches/");
	}
	
	public void generateFile(String file) throws IOException {
		if (Uploads.isEmpty())
			return;
		long start = System.currentTimeMillis();
		Calendar c = Calendar.getInstance();
		c.setTime(new Date((System.currentTimeMillis() - 3600000)));
		int d = c.get(Calendar.DATE);
		int m = c.get(Calendar.MONTH) + 1;
		int y = c.get(Calendar.YEAR);
		String html = "videocache_"+Integer.toString(d)+Integer.toString(m)+Integer.toString(y)+".html";
		String html2 = "videocache_lite_"+Integer.toString(d)+Integer.toString(m)+Integer.toString(y)+".html";
		File out = new File(file, html);
		File out2 = new File(file, html2);
		if (out.exists())
			out.delete();
		if (out2.exists())
			out2.delete();
		String watchAllPre = "Watch ALL the videos!";
		String watchAllTitle = "iUtil upload cache for "+d+"/"+m+"/"+y;
		String watchAllIds = "";
		for (Uploader a : Uploads.values()) {
			Set<String> s = a.URLs.keySet();
			for (String e : s)
				watchAllIds = watchAllIds+(watchAllIds.length() > 0 ? "," : "")+a.URLs.get(e);
		}
		String watchAllFinal = "<div align=\"center\"><a href=\"https://www.youtube.com/watch_videos?video_ids="+watchAllIds+"&no_autoplay=1&title="+watchAllTitle.replaceAll(" ", "%20")+"\">"+watchAllPre+"</a></div>";
		OutputStreamWriter o = new OutputStreamWriter(new FileOutputStream(out));
		OutputStreamWriter o2 = new OutputStreamWriter(new FileOutputStream(out2));
		String s = "<html><head><title>Video uploads for "+d+"/"+m+"/"+y+"</title>" +
				"<style type=\"text/css\">BODY {background: #bbbbbb;}</style>" +
				"</head><body>";
		o.write(s);
		o2.write(s);
		s = "<div align=\"center\" width=\"auto\"><font size=\"5\">Video uploads for "+d+"/"+m+"/"+y+"</font></div>";
		o.write("<div align=\"center\">Prefer this page without images? try the <a href=\"./"+d+m+y+"/lite\">lite version</a>.</div>");
		o2.write("<div align=\"center\">Want the images back? Go back to the <a href=\"../"+d+m+y+"\">full version</a>.</div>");
		o.write(watchAllFinal);
		o2.write(watchAllFinal);
		o.write(s);
		o2.write(s);
		for (Uploader a : Uploads.values()) {
			String u = a.username;
			o.write("<div align=\"center\"><font size=\"6\" style=\"strong\">"+u+
					"</font>");
			o2.write("<font size=\"3\" style=\"strong\">"+u+"</font><ul>");
			Set<String> b = a.URLs.keySet();
			for (String e : b) {
				String url = a.URLs.get(e);
				o.write("<div align=\"center\" width=\"100%\">");
				o2.write("<li><a href=\"https://www.youtube.com/watch?v="+url+"\" target=\"_blank\">"+e+"</a></li>");
				o.write("<a href=\"https://www.youtube.com/watch?v="+url+"\" target=\"_blank\"><img src=\"http://i2.ytimg.com/vi/"+url+"/mqdefault.jpg\" /><br /><font size=\"3\">"+e+"</font></a>");
				o.write("</div>");
			}
			o2.write("</ul>");
			o.write("</div>");	
		}
		long ms = System.currentTimeMillis() - start;
		s = "<div align=\"right\"><font size=\"2\">"+(engine != null ? "Generated by iUtil "+engine.iUtilVersion()+", in " : "Took ")+ms+"ms</font></div></body></html>";
		o.write(s);
		o2.write(s);
		o.flush();
		o2.flush();
		o2.close();
		o.close();
		Uploads.clear();
		if (Engine.UploadsCache.exists()) {
			File new1 = new File(Engine.UploadsCache.getAbsolutePath()+".bak");
			Files.copy(Engine.UploadsCache.toPath(), new1.toPath(), StandardCopyOption.REPLACE_EXISTING);
			Engine.UploadsCache.delete();
		}
		for (Channel e : Engine.channels.values())
			if (!(e.getName().toLowerCase()).equals("#peer.dev"))
				engine.send("PRIVMSG "+e.getName()+" :Today's video cache is now available to view at http://ipeer.auron.co.uk/videocache/"+d+m+y);

			
	}
	
	public static void main(String[] args) {
		Cache a = new Cache(null);
		a.addVideo("BdoubleO100", "Building with BdoubleO - Episode 70 - A shop for precious", "uS0mhrmgWZk");
		a.addVideo("BdoubleO100", "OOGE - Vinyl Fantasy 2 - Episode 19", "pSKpgR97nvA");
		a.addVideo("GenerikB", "Redstone Academy Ep 4 - \"Logic Gates & Practical Uses For Them (AND, XOR, etc)\"", "dg72sN7Qb4Y");
		try {
			a.saveToFile();
			//a.loadFromFile();
			a.generateFile("C:\\www\\vhosts\\localhost\\iPeer\\Site\\");
			Map<String, Uploader> b = a.Uploads;
			for (Uploader c : b.values()) {
				Set<String> e = c.URLs.keySet();
				for (String d : e)
					System.err.println(c.username+": "+c.URLs.get(d));
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public void saveToFile() throws IOException {
		File a = Engine.UploadsCache;
		BufferedWriter c = new BufferedWriter(new OutputStreamWriter(new DataOutputStream(new FileOutputStream(a))));
		for (Uploader b : Uploads.values()) {
			c.write("U:"+b.username+"\n");
			Set<String> e = b.URLs.keySet();
			for (String d : e) {
				String t = d;
				String u = b.URLs.get(d);
				c.write(t+"|URL|"+u+"\n");
			}
		}
		c.flush();
		c.close();
	}
	
	public void loadFromFile() throws IOException {
		File a = Engine.UploadsCache;
		if (!a.exists())
			throw new IOException("File does not exist.");
		BufferedReader b = new BufferedReader(new InputStreamReader(new DataInputStream(new FileInputStream(a))));
		String l = "";
		String user = "";
		Uploader c;
		while ((l = b.readLine()) != null) {
			if (l.startsWith("U:")) {
				user = l.replaceAll("U:", "");
				c = new Uploader(user);
				Uploads.put(user, c);
			}
			else {
				String[] d = l.split("\\|URL\\|");
				String t = d[0];
				String url = d[1];
				Uploads.get(user).addVideo(t, url);
			}
				
		}
		b.close();
		a.delete();
	}

}
